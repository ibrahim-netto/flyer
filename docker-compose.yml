version: "3.9"

volumes:
  data-postgresql:
    driver: local
  data-directus:
    driver: local

services:
  postgresql:
    image: postgis/postgis:${POSTGRES_VERSION:-13-3.3}
    container_name: ${POSTGRES_CONTAINER_NAME:-virail.flyer.postgresql}
    hostname: postgresql
    restart: unless-stopped
    volumes:
      - data-postgresql:/var/lib/postgresql/data
      - .config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - .config/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-trust}
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE:-10m}
        max-file: ${DOCKER_LOG_MAX_FILE:-3}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 3s
      retries: 10
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'

  redis:
    image: redis:6
    container_name: ${REDIS_CONTAINER_NAME:-virail.flyer.redis}
    hostname: redis
    restart: unless-stopped
    volumes:
      - .config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 10
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE:-10m}
        max-file: ${DOCKER_LOG_MAX_FILE:-3}

  directus:
    image: directus/directus:${DIRECTUS_VERSION:-9.20.4}
    container_name: ${DIRECTUS_CONTAINER_NAME:-virail.flyer.directus}
    hostname: directus
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - data-directus:/directus/uploads
    ports:
      - ${DIRECTUS_LISTEN:-8055}:8055
    environment:
      KEY: ${DIRECTUS_KEY:-key}
      SECRET: ${DIRECTUS_SECRET:-secret}
      DB_CLIENT: ${DIRECTUS_DB_CLIENT:-pg}
      DB_CONNECTION_STRING: ${POSTGRES_MASTER_URI:-postgres://postgres:postgres@postgresql:5432/postgres}
      STORAGE_LOCATIONS: ${DIRECTUS_STORAGE_LOCATIONS:-local}
      STORAGE_LOCAL_DRIVER: 'local'
      STORAGE_LOCAL_ROOT: ${DIRECTUS_STORAGE_S3_DRIVER:-./uploads}
      STORAGE_S3_DRIVER: 's3'
      STORAGE_S3_KEY: ${DIRECTUS_STORAGE_S3_KEY-}
      STORAGE_S3_SECRET: ${DIRECTUS_STORAGE_S3_SECRET-}
      STORAGE_S3_BUCKET: ${DIRECTUS_STORAGE_S3_BUCKET-}
      STORAGE_S3_REGION: ${DIRECTUS_STORAGE_S3_REGION-}
      STORAGE_S3_ENDPOINT: ${DIRECTUS_STORAGE_S3_ENDPOINT-}
      CACHE_ENABLED: ${DIRECTUS_CACHE_ENABLED:-false}
      CACHE_STORE: ${DIRECTUS_CACHE_STORE:-redis}
      CACHE_REDIS: ${DIRECTUS_CACHE_REDIS:-redis://redis:6379}
      CACHE_NAMESPACE: virail-flyer
      CACHE_TTL: ${DIRECTUS_CACHE_TTL:-1h}
      CACHE_AUTO_PURGE: 'true'
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD:-d1r3ctu5}
      AUTH_PROVIDERS: ${DIRECTUS_AUTH_PROVIDERS-}
      AUTH_GOOGLE_DRIVER: ${DIRECTUS_AUTH_GOOGLE_DRIVER:-openid}
      AUTH_GOOGLE_CLIENT_ID: ${DIRECTUS_AUTH_GOOGLE_CLIENT_ID-}
      AUTH_GOOGLE_CLIENT_SECRET: ${DIRECTUS_AUTH_GOOGLE_CLIENT_SECRET-}
      AUTH_GOOGLE_ISSUER_URL: ${DIRECTUS_AUTH_GOOGLE_ISSUER_URL-}
      AUTH_GOOGLE_ICON: ${DIRECTUS_AUTH_GOOGLE_ICON:-google}
      AUTH_GOOGLE_IDENTIFIER_KEY: ${DIRECTUS_AUTH_GOOGLE_IDENTIFIER_KEY:-email}
      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL:-http://localhost:8055}
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE:-10m}
        max-file: ${DOCKER_LOG_MAX_FILE:-3}
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8055/server/health || exit 1
      start_period: 15s
      interval: 15s
      timeout: 15s
      retries: 3

  node:
    profiles: ["production"]
    build: .
    container_name: ${NODE_CONTAINER_NAME:-virail.flyer.node}
    hostname: node
    depends_on:
      directus:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules:rw
    ports:
      - ${NODE_LISTEN:-127.0.0.1:3000}:3000
    env_file:
      - .env
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE:-10m}
        max-file: ${DOCKER_LOG_MAX_FILE:-3}
    working_dir: /app
    command: node ./index.js